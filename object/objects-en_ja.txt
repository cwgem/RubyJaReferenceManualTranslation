= Object オブジェクト =

== What Is An Object? オブジェクトとは ==

All values that Ruby deals with are objects. Manipulation of these objects is handled through the calling of methods. Which methods an object responds to is uniquely determined by the class it belongs to. The class which an object belongs to is decided at the time of its creation, and with the exception of singleton classes, the class cannot be modified. When compared to a specific class, an object is often referred to as an interface.

The creation of objects is generally initiated through calling the methods of other objects.

Ruby で扱える全ての値はオブジェクトです。 Ruby のオブジェクトに対して可能な操作はメソッド呼び出しのみです。 あるオブジェクトが反応できるメソッドは、 そのオブジェクトが所属するクラスによって一意に決定します。 所属するクラスはオブジェクト生成時に決まり、その後は特異クラスの導入以外、所属クラスが変わることはありません。 またオブジェクトは、特定のクラスに対比して、その「インスタンス」とも呼ばれます。

オブジェクトの生成は、一般には、別のオブジェクトのメソッドを呼び出すことによって行われます。

== Class クラス ==

Class themselves decide what methods that a member object can respond to. When a method can be called through a member object, it is said that the method is defined in the class. Methods are also uniquely determined by their class and name.

Classes will always have at least one "superclass". Methods defined in the superclass will also be defined for the base class. This is known as "inheritance". Inheritance is chained, so methods defined in a superclass' superclass will also be defined for the base class.

クラスは自身に所属するオブジェクトが反応できるメソッドを決定します。 所属するオブジェクトに対してあるメソッドを呼び出すことができるなら、 そのメソッドが「クラスに定義されている」と言います。 またメソッドはクラスとメソッド名によって一意に決定します。

クラスは必ずただひとつの「スーパークラス」を持ち、 スーパークラスであるメソッドが定義されていれば自クラスでもそのメソッドが同じ内容で定義されていることになります。 これを「継承」と呼びます。 継承は推移するので、スーパークラスのスーパークラスが持つメソッドもまた自クラスにおいて定義されていることになります。

== Module モジュール ==

[NOTE]
Incomplete original Japanese

[source,ruby]
include

A unique type of object that is not a class but acts similarly.

include

ちょっと特殊でクラスではない。しかし機能は同じ

== Method メソッド ==

Methods are executable, and the start of a method execution is known as "calling" that method. It is also possible to pass objects to a method when calling it, which are referred to as "arguments". The number of arguments that a method can accept are determined when the method is defined, and cannot be modified later.

メソッドは実行することができます。その実行を開始することを通常「呼び出す」と言います。 また呼び出すときにはオブジェクトを渡すことができ、 そのオブジェクトを「引数」と呼びます。いくつの引数を受け取ることができるかはメソッドの定義時に決定し、 変更することはできません。
